{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\n/***\n * Created by Srvraj311 (Sourabh)\n * sourabhraj311@gmail.com\n *\n * Booking Service\n * This service provides all the functionalities for booking\n * All the logic are includes in this service itself.\n */\n\nexport let BookingService = /*#__PURE__*/(() => {\n  class BookingService {\n    constructor(dataService) {\n      this.dataService = dataService;\n      this.dataService.getAvailableSeat.subscribe(a => this.availableSeats = a);\n    } // Function to book seats\n    // parameters : n -> Number of seats needed to book\n\n\n    bookSeat(n) {\n      if (this.availableSeats === 0) {\n        alert('Seats are Full');\n        return;\n      } else if (this.availableSeats < n) {\n        alert('Selected amount of seats is not available to book, try less');\n        return;\n      } else {\n        this.dataService.makeBookRequest(n).subscribe(res => {\n          this.dataService.changeMat(this.dataService.convertBinaryToMatrix(res.coach.bookingState));\n          this.dataService.updateBookedSeat(res.bookedSeat);\n          this.dataService.updateAvailableSeats(res.coach.availableSeats);\n        });\n        return;\n      }\n    }\n\n    generateSeatsRandom() {\n      this.dataService.generateRandom().subscribe(res => {\n        this.dataService.changeMat(this.dataService.convertBinaryToMatrix(res.coach.bookingState));\n        this.dataService.updateBookedSeat(res.bookedSeat);\n        this.dataService.updateAvailableSeats(res.coach.availableSeats);\n      });\n    }\n\n    resetMatrix() {\n      this.dataService.resetMatrix().subscribe(res => {\n        this.dataService.changeMat(this.dataService.convertBinaryToMatrix(res.coach.bookingState));\n        this.dataService.updateBookedSeat(res.bookedSeat);\n        this.dataService.updateAvailableSeats(res.coach.totalSeats);\n      });\n    }\n\n  }\n\n  BookingService.ɵfac = function BookingService_Factory(t) {\n    return new (t || BookingService)(i0.ɵɵinject(i1.DataService));\n  };\n\n  BookingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BookingService,\n    factory: BookingService.ɵfac,\n    providedIn: 'root'\n  });\n  return BookingService;\n})();","map":null,"metadata":{},"sourceType":"module"}